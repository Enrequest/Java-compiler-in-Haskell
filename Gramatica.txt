
G                 -> "class" Identificador "{" Miembros "}"
Miembros          -> Miembro ";" Miembros
                   | Epsilon
Miembro           -> Tipo Identificador 
                   |Tipo Identificador "(" <Parametros>? ")" Cuerpo
Parametros        -> Parametro <"," Parametro>* 
Parametro              -> Tipo Identificador
--Cuerpo                 -> Bloque | ";"
Cuerpo                 -> Bloque
Bloque                 -> "{" <DeclaracionBloque>* "}"

{-
DeclaracionBloque    -> Asignacion
                        | Condicional
                        | While
                        
Condicional -> "if" "(" ExpresionCondicional ")" "{" <DeclaracionBloque>* "}" <"else" "{" <DeclaracionBloque>* "}">?

While -> "while" "(" ExpresionCondicional ")" "{" <DeclaracionBloque>* "}"
   
Asignacion     -> Identificador "=" ExpresionCondicional ";"
-}                         

DeclaracionBloque -> Identificador "=" ExpresionCondicional ";"
                  | "if" "(" ExpresionCondicional ")" Bloque 
                  | "if" "(" ExpresionCondicional ")" Bloque "else" CuerpoElse 
                  | "while" "(" ExpresionCondicional ")" Bloque
                  | "return" <ExpresionCondicional>? ";"
                  | "return" Expresion ";"
CuerpoElse -> Bloque
            | "if" "(" ExpresionCondicional ")" Bloque
            
ExpresionCondicional->ExpresionRelacional "||" ExpresionCondicional
              | ExpresionRelacional "&&" ExpresionCondicional
              | ExpresionRelacional                                
                   
ExpresionRelacional -> Expresion "==" ExpresionRelacional
                     | Expresion "!=" ExpresionRelacional
                     | Expresion "<" ExpresionRelacional
                     | Expresion ">" ExpresionRelacional
                     | Expresion "<=" ExpresionRelacional
                     | Expresion ">=" ExpresionRelacional
                     | Expresion

Expresion      -> Termino "+" ExpresionCondicional
                | Termino "-" ExpresionCondicional
                | Termino
                                 
Termino        -> Factor "*" Termino
                | Factor "/" Termino
                | Factor
Factor         -> Literal
                | Funcion
                | Itentificador
                | "(" ExpresionCondicional ")"
                
Funcion        -> Identificador "(" <Argumentos>? ")"
Argumentos     -> Expresion <"," Expresion>*
Literal        -> IntegerLiteral
                | BooleanLiteral 
Identificador (letra | "_")+
Tipo           -> "int" | "boolean" | "void"



