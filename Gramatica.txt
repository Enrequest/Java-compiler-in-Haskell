
G                 -> "class" Identificador "{" Miembros "}"
Miembros          -> Miembro ";" Miembros
                   | Epsilon
Miembro           -> Tipo Identificador 
                   |Tipo Identificador "(" <Parametros>? ")" Cuerpo
Parametros             -> Parametro
                        | Parametro "," Parametros
Parametro              -> Tipo Identificador
Cuerpo                 -> Bloque | ";"
Bloque                 -> "{" <DeclaracionBloque>* "}"
DeclararacionBloque    -> Asignacion
{-
Asignacion     -> Identificador "=" Expresion ";"
-}

Asignacion     -> Identificador "=" ExpresionCondicional ";"

ExpresionCondicional->ExpresionRelacional "||" ExpresionCondicional
                    | ExpresionRelacional "&&" ExpresionCondicional
                    | ExpresionRelacional                                
{-                
ExpresionIgualdad -> ExpresionRelacional "==" ExpresionIgualdad
                   | ExpresionRelacional "!=" ExpresionIgualdad
                   | ExpresionRelacional
-}
                   
ExpresionRelacional -> Expresion "==" ExpresionRelacional
                     | Expresion "!=" ExpresionRelacional
                     | Expresion "<" ExpresionRelacional
                     | Expresion ">" ExpresionRelacional
                     | Expresion "<=" ExpresionRelacional
                     | Expresion ">=" ExpresionRelacional
                     | Expresion

Expresion      -> Termino "+" ExpresionCondicional
                | Termino "-" ExpresionCondicional
                | Termino
                                 
Termino        -> Factor "*" Termino
                | Factor
Factor         -> Literal
                | Funcion
                | Itentificador
                | "(" ExpresionCondicional ")"

{-
Expresion      -> Termino "+" Expresion
                | Termino "-" Expresion
                | Termino
                                 
Termino        -> Factor "*" Termino
                | Factor
Factor         -> Literal
                | Funcion
                | Itentificador
                | "(" Expresion ")"
-}
                
Funcion        -> Identificador "(" <Argumentos>? ")"
Argumentos     -> Expresion <"," Expresion>*
Literal        -> IntegerLiteral
                | BooleanLiteral 
Identificador (letra | "_")+
Tipo              -> "int" | "boolean" | "void"



{-
InizializadorVariable  -> Literal
                        | Identificador
-}

